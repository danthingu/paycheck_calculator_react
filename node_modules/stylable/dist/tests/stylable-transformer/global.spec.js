"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var chai_1 = require("chai");
var generate_test_util_1 = require("../utils/generate-test-util");
describe('Stylable postcss transform (Global)', function () {
    it('should support :global()', function () {
        var result = generate_test_util_1.generateStylableRoot({
            entry: "/a/b/style.st.css",
            files: {
                '/a/b/style.st.css': {
                    namespace: 'style',
                    content: "\n                        .root :global(.btn) {}\n                        :global(.btn) {}\n                        :global(.btn) .container {}\n                    "
                }
            }
        });
        chai_1.expect(result.nodes[0].selector).to.equal('.style--root .btn');
        chai_1.expect(result.nodes[1].selector).to.equal('.btn');
        chai_1.expect(result.nodes[2].selector).to.equal('.btn .style--container');
    });
    it('should support :global() as mixin', function () {
        var result = generate_test_util_1.generateStylableRoot({
            entry: "/style.st.css",
            // scopeRoot: false,
            files: {
                '/style.st.css': {
                    namespace: 'style',
                    content: "\n                        :import {\n                            -st-from: \"./comp.st.css\";\n                            -st-default: Comp;\n                        }\n                        .root {\n                            -st-mixin: Comp;\n                        }\n                    "
                },
                '/comp.st.css': {
                    namespace: 'comp',
                    content: "\n                        :global(.btn) .root {}\n                    "
                }
            }
        });
        chai_1.expect(result.nodes[1].selector).to.equal('.btn .style--root');
    });
    it('should support nested :global() as mixin', function () {
        var result = generate_test_util_1.generateStylableRoot({
            entry: "/style.st.css",
            // scopeRoot: false,
            files: {
                '/style.st.css': {
                    namespace: 'style',
                    content: "\n                        :import {\n                            -st-from: \"./mixin.st.css\";\n                            -st-default: Mixin;\n                        }\n                        .root {\n                            -st-mixin: Mixin;\n                        }\n                    "
                },
                '/mixin.st.css': {
                    namespace: 'mixin',
                    content: "\n                        :import {\n                            -st-from: \"./comp.st.css\";\n                            -st-default: Comp;\n                        }\n                        .root {\n                            -st-mixin: Comp;\n                        }\n                    "
                },
                '/comp.st.css': {
                    namespace: 'comp',
                    content: "\n                        :global(.btn) .root {}\n                    "
                }
            }
        });
        chai_1.expect(result.nodes[1].selector).to.equal('.btn .style--root');
    });
});
//# sourceMappingURL=global.spec.js.map