"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function matchRuleAndDeclaration(parent, selectorIndex, selector, decl, msg) {
    var rule = parent.nodes[selectorIndex];
    if (rule.selector !== selector) {
        throw new Error((msg ? msg + ' ' : '') + "selector " + selectorIndex);
    }
    // expect(rule.selector, `${msg ? msg + ' ' : ''}selector ${selectorIndex}`).to.equal(selector);
    if (rule.nodes.map(function (x) { return x.toString(); }).join(';') !== decl) {
        throw new Error((msg ? msg + ' ' : '') + "selector " + selectorIndex + " first declaration");
    }
}
exports.matchRuleAndDeclaration = matchRuleAndDeclaration;
function matchAllRulesAndDeclarations(parent, all, msg, offset) {
    if (offset === void 0) { offset = 0; }
    all.forEach(function (_, i) { return matchRuleAndDeclaration(parent, i + offset, _[0], _[1], msg); });
}
exports.matchAllRulesAndDeclarations = matchAllRulesAndDeclarations;
//# sourceMappingURL=ast-matchers.js.map