/// <reference types="node" />
import { Duplex } from 'stream';
export declare const DEFAULT_INITIAL_SIZE: number;
export declare const DEFAULT_INCREMENT_AMOUNT: number;
export declare const DEFAULT_FREQUENCY = 1;
export declare const DEFAULT_CHUNK_SIZE = 1024;
export declare class DuplexBufferStream extends Duplex {
    private initialSize;
    private incrementAmount;
    private frequency;
    private chunkSize;
    private buffer;
    size: number;
    private allowPush;
    private stopped;
    private timeout;
    constructor(initialSize?: number, incrementAmount?: number, frequency?: number, chunkSize?: number);
    maxSize(): number;
    getContents(length: number): Buffer | "";
    getContentsAsString(encoding: string, length: number): string;
    _write(chunk: Buffer, encoding: string, done: Function): void;
    increaseBufferIfNecessary(incomingDataSize: number): void;
    sendData: () => void;
    initiateSendData(): void;
    stop(): void;
    _read(): void;
}
