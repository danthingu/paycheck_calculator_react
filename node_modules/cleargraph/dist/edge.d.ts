import { NodeId } from './node';
export declare type EdgeId = string;
export declare type RawEdge<E> = {
    sourceId: NodeId;
    targetId: NodeId;
    attr: E;
};
export declare class GraphEdge<E> {
    readonly sourceId: NodeId;
    readonly targetId: NodeId;
    attr: E;
    constructor(sourceId: NodeId, targetId: NodeId, attr: E);
    stringify(): string;
    static fromObject(obj: {
        sourceId: string;
        targetId: string;
        edge: any;
    }, parseEdge: (data: any) => any): {
        sourceId: string;
        targetId: string;
        edge: any;
    };
    static edgeId(sourceId: NodeId, targetId: NodeId): EdgeId;
    static parseEdgeId(id: EdgeId): {
        sourceId: NodeId;
        targetId: NodeId;
    };
    get nodes(): string[];
}
export declare function genericParseEdge(edge: any): any;
export declare function genericEdgeToJson(edge: any): any;
