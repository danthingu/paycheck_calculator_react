import { EdgeId } from './edge';
export declare type NodeId = string;
export declare class GraphNode<N> {
    id: NodeId;
    attr: N;
    _inEdges: EdgeId[];
    _outEdges: EdgeId[];
    constructor(id: NodeId, attr: N, inEdges?: EdgeId[], outEdges?: EdgeId[]);
    setInEdge(edgeId: EdgeId): void;
    setOutEdge(edgeId: EdgeId): void;
    deleteEdge(edgeId: EdgeId): void;
    get inEdges(): EdgeId[];
    get outEdges(): EdgeId[];
    get nodeEdges(): EdgeId[];
    isSource(): boolean;
    isSink(): boolean;
    equals(node: GraphNode<N>): boolean;
    stringify(): string;
    static fromObject(obj: {
        id: string;
        node: any;
    }, parseNode: (data: any) => any): {
        id: string;
        node: any;
    };
}
export declare function genericParseNode(node: any): any;
export declare function genericNodeToJson(node: any): any;
