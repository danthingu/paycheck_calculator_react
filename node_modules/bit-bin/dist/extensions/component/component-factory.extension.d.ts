import { IsolatorExtension } from '../isolator';
import ConsumerComponent from '../../consumer/component';
import Component from './component';
export declare type ConfigFunc = () => any;
export default class ComponentFactory {
    private isolateEnv;
    static id: string;
    static dependencies: (typeof IsolatorExtension)[];
    constructor(isolateEnv: IsolatorExtension);
    create(): void;
    fromLegacyComponent(legacyComponent: ConsumerComponent): Component;
    static provider([isolator]: [IsolatorExtension]): Promise<ComponentFactory>;
}
