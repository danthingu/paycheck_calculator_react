"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loadExtensionsByManifests = loadExtensionsByManifests;

function _bluebird() {
  const data = require("bluebird");

  _bluebird = function () {
    return data;
  };

  return data;
}

function _constants() {
  const data = require("./constants");

  _constants = function () {
    return data;
  };

  return data;
}

// TODO: change to use the new logger, see more info at loadExtensions function in the workspace
function loadExtensionsByManifests(_x, _x2, _x3) {
  return _loadExtensionsByManifests.apply(this, arguments);
}

function _loadExtensionsByManifests() {
  _loadExtensionsByManifests = (0, _bluebird().coroutine)(function* (harmony, extensionsManifests, logger) {
    try {
      yield harmony.set(extensionsManifests);
    } catch (e) {
      const ids = extensionsManifests.map(manifest => manifest.name);
      const warning = (0, _constants().UNABLE_TO_LOAD_EXTENSION_FROM_LIST)(ids);
      logger.warn(warning); // TODO: improve texts

      logger.console(warning, 'warn', 'yellow');
      logger.warn(warning, e);
    }
  });
  return _loadExtensionsByManifests.apply(this, arguments);
}