"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.provideCompile = provideCompile;
exports.default = void 0;

function _bluebird() {
  const data = require("bluebird");

  _bluebird = function () {
    return data;
  };

  return data;
}

function _workspace() {
  const data = require("../workspace");

  _workspace = function () {
    return data;
  };

  return data;
}

function _environments() {
  const data = require("../environments");

  _environments = function () {
    return data;
  };

  return data;
}

function _cli() {
  const data = require("../cli");

  _cli = function () {
    return data;
  };

  return data;
}

function _compiler() {
  const data = require("./compiler.cmd");

  _compiler = function () {
    return data;
  };

  return data;
}

function _compile() {
  const data = require("./compile");

  _compile = function () {
    return data;
  };

  return data;
}

function _compiler2() {
  const data = require("./compiler.task");

  _compiler2 = function () {
    return data;
  };

  return data;
}

const name = 'compile';
var _default = {
  name,
  dependencies: [_cli().CLIExtension, _workspace().WorkspaceExt, _environments().Environments],
  provider: provideCompile
};
exports.default = _default;

function provideCompile(_x) {
  return _provideCompile.apply(this, arguments);
}

function _provideCompile() {
  _provideCompile = (0, _bluebird().coroutine)(function* ([cli, workspace, envs]) {
    const compilerTask = new (_compiler2().CompilerTask)(name);
    const compile = new (_compile().Compile)(workspace, envs, compilerTask);
    cli.register(new (_compiler().CompileCmd)(compile));
    return compile;
  });
  return _provideCompile.apply(this, arguments);
}