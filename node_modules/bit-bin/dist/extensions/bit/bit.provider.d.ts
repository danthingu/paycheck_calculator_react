export declare type BitDeps = [];
export declare type BitConfig = {};
export declare function provideBit(): Promise<{
    manifestsMap: {
        [x: string]: import("@teambit/harmony").ExtensionManifest | typeof import("../environments").Environments | typeof import("../dependency-resolver").DependencyResolverExtension | {
            name: string;
            dependencies: never[];
            config: {};
            provider: typeof import("../logger/logger.provider").provideLogger;
        } | typeof import("../cli").CLIExtension | {
            name: string;
            dependencies: {
                name: string;
                dependencies: never[];
                config: {};
                provider: typeof import("../logger/logger.provider").provideLogger;
            }[];
            config: {};
            provider: typeof import("../reporter/reporter.provider").provideReporter;
        } | typeof import("../isolator").IsolatorExtension | typeof import("../component").ComponentFactoryExt | typeof import("../scope").ScopeExtension | {
            name: string;
            dependencies: never[];
            config: {};
            provider: typeof import("../config/config.provider").default;
        } | typeof import("../graphql").GraphQLExtension | typeof import("../builder").BuilderExtension | typeof import("../pkg").PkgExtension | typeof import("../tester").TesterExtension | typeof import("../react").React | typeof import("../ui").UIExtension | {
            name: string;
            dependencies: (import("@teambit/harmony").ExtensionManifest | typeof import("../cli").CLIExtension)[];
            provider: typeof import("../watch/watch.provider").provideWatch;
        };
    };
}>;
