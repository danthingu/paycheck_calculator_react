"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.manifestsMap = void 0;

function _cli() {
  const data = require("../cli");

  _cli = function () {
    return data;
  };

  return data;
}

function _compiler() {
  const data = require("../compiler");

  _compiler = function () {
    return data;
  };

  return data;
}

function _component() {
  const data = require("../component");

  _component = function () {
    return data;
  };

  return data;
}

function _graph() {
  const data = require("../graph");

  _graph = function () {
    return data;
  };

  return data;
}

function _config() {
  const data = require("../config");

  _config = function () {
    return data;
  };

  return data;
}

function _core() {
  const data = require("../core");

  _core = function () {
    return data;
  };

  return data;
}

function _create() {
  const data = require("../create");

  _create = function () {
    return data;
  };

  return data;
}

function _dependencyResolver() {
  const data = require("../dependency-resolver");

  _dependencyResolver = function () {
    return data;
  };

  return data;
}

function _environments() {
  const data = require("../environments");

  _environments = function () {
    return data;
  };

  return data;
}

function _flows() {
  const data = require("../flows");

  _flows = function () {
    return data;
  };

  return data;
}

function _insights() {
  const data = require("../insights");

  _insights = function () {
    return data;
  };

  return data;
}

function _isolator() {
  const data = require("../isolator");

  _isolator = function () {
    return data;
  };

  return data;
}

function _logger() {
  const data = require("../logger");

  _logger = function () {
    return data;
  };

  return data;
}

function _pkg() {
  const data = require("../pkg");

  _pkg = function () {
    return data;
  };

  return data;
}

function _react() {
  const data = require("../react");

  _react = function () {
    return data;
  };

  return data;
}

function _reporter() {
  const data = require("../reporter");

  _reporter = function () {
    return data;
  };

  return data;
}

function _scope() {
  const data = require("../scope");

  _scope = function () {
    return data;
  };

  return data;
}

function _tester() {
  const data = require("../tester");

  _tester = function () {
    return data;
  };

  return data;
}

function _builder() {
  const data = require("../builder");

  _builder = function () {
    return data;
  };

  return data;
}

function _variants() {
  const data = require("../variants");

  _variants = function () {
    return data;
  };

  return data;
}

function _graphql() {
  const data = require("../graphql");

  _graphql = function () {
    return data;
  };

  return data;
}

function _watch() {
  const data = require("../watch");

  _watch = function () {
    return data;
  };

  return data;
}

function _workspace() {
  const data = require("../workspace");

  _workspace = function () {
    return data;
  };

  return data;
}

function _ui() {
  const data = require("../ui");

  _ui = function () {
    return data;
  };

  return data;
}

// import { GitExt } from '../git';
const manifestsMap = {
  [_cli().CLIExtension.name]: _cli().CLIExtension,
  [_workspace().WorkspaceExt.name]: _workspace().WorkspaceExt,
  [_compiler().CompileExt.name]: _compiler().CompileExt,
  [_component().ComponentFactoryExt.id]: _component().ComponentFactoryExt,
  [_config().ConfigExt.name]: _config().ConfigExt,
  [_graphql().GraphQLExtension.name]: _graphql().GraphQLExtension,
  [_ui().UIExtension.name]: _ui().UIExtension,
  [_core().CoreExt.name]: _core().CoreExt,
  [_create().CreateExt.name]: _create().CreateExt,
  // [DependencyResolverExt.name]: DependencyResolverExt,
  [_environments().Environments.id]: _environments().Environments,
  [_flows().FlowsExt.name]: _flows().FlowsExt,
  // [GitExt.name]: GitExt,
  [_graph().ComponentGraphExt.name]: _graph().ComponentGraphExt,
  [_dependencyResolver().DependencyResolverExtension.id]: _dependencyResolver().DependencyResolverExtension,
  [_insights().InsightsExt.name]: _insights().InsightsExt,
  [_isolator().IsolatorExtension.id]: _isolator().IsolatorExtension,
  [_logger().LoggerExt.name]: _logger().LoggerExt,
  [_pkg().PkgExtension.id]: _pkg().PkgExtension,
  // TODO: take from the extension itself & change name to follow convention
  [_react().React.name]: _react().React,
  [_reporter().ReporterExt.name]: _reporter().ReporterExt,
  [_scope().ScopeExtension.id]: _scope().ScopeExtension,
  // TODO: take from the extension itself & change name to follow convention
  [_tester().TesterExtension.id]: _tester().TesterExtension,
  // TODO: take from the extension itself & change name to follow convention
  [_builder().BuilderExtension.id]: _builder().BuilderExtension,
  [_variants().VariantsExt.name]: _variants().VariantsExt,
  [_watch().WatchExt.name]: _watch().WatchExt,
  [_workspace().WorkspaceExt.name]: _workspace().WorkspaceExt
};
exports.manifestsMap = manifestsMap;