import { Environment } from '../environments';
import { Tester, TesterExtension } from '../tester';
import { Component } from '../component';
import { Workspace } from '../workspace';
import { LogPublisher } from '../logger';
import { JestExtension } from '../jest';
import { TypescriptExtension } from '../typescript';
import { BuildTask } from '../builder';
import { Compiler, Compile } from '../compiler';
export declare class ReactEnv implements Environment {
    private logger;
    private jest;
    private ts;
    private compiler;
    private tester;
    constructor(logger: LogPublisher, jest: JestExtension, ts: TypescriptExtension, compiler: Compile, tester: TesterExtension);
    patchComponents(components: Component[], workspace: Workspace): Component[];
    getLinter(): void;
    getTester(): Tester;
    getCompiler(): Compiler;
    dependencies(): Promise<{
        dependencies: {
            react: string;
        };
        devDependencies: {
            '@types/react': string;
        };
        peerDependencies: {
            react: string;
        };
    }>;
    getPipe(): BuildTask[];
    dev(workspace: Workspace, components: Component[]): void;
    private getEntries;
}
