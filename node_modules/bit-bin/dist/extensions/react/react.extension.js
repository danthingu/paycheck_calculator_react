"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.React = void 0;

function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

  _defineProperty2 = function () {
    return data;
  };

  return data;
}

function _environments() {
  const data = require("../environments");

  _environments = function () {
    return data;
  };

  return data;
}

function _react() {
  const data = require("./react.env");

  _react = function () {
    return data;
  };

  return data;
}

function _logger() {
  const data = require("../logger");

  _logger = function () {
    return data;
  };

  return data;
}

function _jest() {
  const data = require("../jest");

  _jest = function () {
    return data;
  };

  return data;
}

function _typescript() {
  const data = require("../typescript");

  _typescript = function () {
    return data;
  };

  return data;
}

function _compiler() {
  const data = require("../compiler");

  _compiler = function () {
    return data;
  };

  return data;
}

function _tester() {
  const data = require("../tester");

  _tester = function () {
    return data;
  };

  return data;
}

class React {
  // createTsCompiler(tsconfig: {}) {}
  setTsConfig() {} // @typescript-eslint/no-unused-vars


  static provider([envs, logger, jest, ts, compile, tester]) {
    // support factories from harmony?
    envs.registerEnv(new (_react().ReactEnv)(logger.createLogPublisher(this.id), jest, ts, compile, tester));
    return {};
  }

}

exports.React = React;
(0, _defineProperty2().default)(React, "id", '@teambit/react');
(0, _defineProperty2().default)(React, "dependencies", [_environments().Environments, _logger().LoggerExt, _jest().JestExtension, _typescript().TypescriptExtension, _compiler().CompileExt, _tester().TesterExtension]);