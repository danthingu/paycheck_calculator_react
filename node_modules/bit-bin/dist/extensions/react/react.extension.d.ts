import { Environments } from '../environments';
import { Logger } from '../logger';
import { JestExtension } from '../jest';
import { TypescriptExtension } from '../typescript';
import { Compile } from '../compiler';
import { TesterExtension } from '../tester';
export declare type ReactConfig = {
    writeDist: boolean;
    compiler: {};
};
export declare class React {
    static id: string;
    static dependencies: (import("@teambit/harmony").ExtensionManifest | typeof Environments | {
        name: string;
        dependencies: never[];
        config: {};
        provider: typeof import("../logger/logger.provider").provideLogger;
    } | typeof TesterExtension | typeof JestExtension | typeof TypescriptExtension)[];
    setTsConfig(): void;
    static provider([envs, logger, jest, ts, compile, tester]: [Environments, Logger, JestExtension, TypescriptExtension, Compile, TesterExtension]): {};
}
