"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TesterExtension = void 0;

function _bluebird() {
  const data = require("bluebird");

  _bluebird = function () {
    return data;
  };

  return data;
}

function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

  _defineProperty2 = function () {
    return data;
  };

  return data;
}

function _test() {
  const data = require("./test.cmd");

  _test = function () {
    return data;
  };

  return data;
}

function _environments() {
  const data = require("../environments");

  _environments = function () {
    return data;
  };

  return data;
}

function _workspace() {
  const data = require("../workspace");

  _workspace = function () {
    return data;
  };

  return data;
}

function _tester() {
  const data = require("./tester.service");

  _tester = function () {
    return data;
  };

  return data;
}

function _tester2() {
  const data = require("./tester.task");

  _tester2 = function () {
    return data;
  };

  return data;
}

function _cli() {
  const data = require("../cli");

  _cli = function () {
    return data;
  };

  return data;
}

class TesterExtension {
  constructor(envs, workspace, service, task) {
    this.envs = envs;
    this.workspace = workspace;
    this.service = service;
    this.task = task;
  }

  test(components) {
    var _this = this;

    return (0, _bluebird().coroutine)(function* () {
      const envs = yield _this.envs.createEnvironment(components);
      const results = yield envs.run(_this.service);
      return results;
    })();
  }

  static provider([cli, envs, workspace], config) {
    // @todo: Ran to fix.
    // @ts-ignore
    const tester = new TesterExtension(envs, workspace, new (_tester().TesterService)(workspace, config.testRegex), new (_tester2().TesterTask)(TesterExtension.id));
    cli.register(new (_test().TestCmd)(tester, workspace));
    return tester;
  }

}

exports.TesterExtension = TesterExtension;
(0, _defineProperty2().default)(TesterExtension, "id", '@teambit/tester');
(0, _defineProperty2().default)(TesterExtension, "dependencies", [_cli().CLIExtension, _environments().Environments, _workspace().WorkspaceExt]);
(0, _defineProperty2().default)(TesterExtension, "defaultConfig", {
  /**
   * default test regex for which files tester to apply on.
   */
  testRegex: '*.{spec,test}.{js,jsx,ts,tsx}'
});