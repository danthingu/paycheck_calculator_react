import { Environments } from '../environments';
import { Workspace } from '../workspace';
import { TesterService } from './tester.service';
import { Component } from '../component';
import { TesterTask } from './tester.task';
import { CLIExtension } from '../cli';
export declare type TesterExtensionConfig = {
    testRegex: string;
};
export declare class TesterExtension {
    private envs;
    private workspace;
    readonly service: TesterService;
    readonly task: TesterTask;
    static id: string;
    static dependencies: (import("@teambit/harmony").ExtensionManifest | typeof Environments | typeof CLIExtension)[];
    constructor(envs: Environments, workspace: Workspace, service: TesterService, task: TesterTask);
    test(components: Component[]): Promise<{
        env: string;
        res: any;
    }[]>;
    static defaultConfig: {
        testRegex: string;
    };
    static provider([cli, envs, workspace]: [CLIExtension, Environments, Workspace], config: TesterExtensionConfig): TesterExtension;
}
