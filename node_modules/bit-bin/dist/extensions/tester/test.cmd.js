"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TestCmd = void 0;

function _bluebird() {
  const data = require("bluebird");

  _bluebird = function () {
    return data;
  };

  return data;
}

function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

  _defineProperty2 = function () {
    return data;
  };

  return data;
}

function _react() {
  const data = _interopRequireDefault(require("react"));

  _react = function () {
    return data;
  };

  return data;
}

function _ink() {
  const data = require("ink");

  _ink = function () {
    return data;
  };

  return data;
}

// eslint-disable-next-line @typescript-eslint/no-unused-vars
// eslint-disable-next-line @typescript-eslint/no-unused-vars
class TestCmd {
  constructor(tester, workspace) {
    this.tester = tester;
    this.workspace = workspace;
    (0, _defineProperty2().default)(this, "name", 'test-new [pattern]');
    (0, _defineProperty2().default)(this, "description", 'test set of components in your workspace');
    (0, _defineProperty2().default)(this, "alias", 'at');
    (0, _defineProperty2().default)(this, "private", true);
    (0, _defineProperty2().default)(this, "group", 'development');
    (0, _defineProperty2().default)(this, "shortDescription", '');
    (0, _defineProperty2().default)(this, "options", []);
  }

  render([userPattern]) {
    var _this = this;

    return (0, _bluebird().coroutine)(function* () {
      const pattern = userPattern && userPattern.toString();
      const results = yield _this.tester.test(pattern ? yield _this.workspace.byPattern(pattern) : yield _this.workspace.list());
      return /*#__PURE__*/_react().default.createElement(Envs, {
        envs: results
      });
    })();
  }

}

exports.TestCmd = TestCmd;

function Envs({
  envs
}) {
  return /*#__PURE__*/_react().default.createElement(_ink().Box, null, envs.map((env, key) => {
    return /*#__PURE__*/_react().default.createElement(Env, {
      key: key,
      env: env.env,
      results: env.res
    });
  }));
}

function Env({
  env
}) {
  return /*#__PURE__*/_react().default.createElement(_ink().Color, {
    cyan: true
  }, env);
} // function TestResults() {}