"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UIExtension = void 0;

function _bluebird() {
  const data = require("bluebird");

  _bluebird = function () {
    return data;
  };

  return data;
}

function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

  _defineProperty2 = function () {
    return data;
  };

  return data;
}

function _webpackDevServer() {
  const data = _interopRequireDefault(require("webpack-dev-server"));

  _webpackDevServer = function () {
    return data;
  };

  return data;
}

function _webpack() {
  const data = _interopRequireDefault(require("webpack"));

  _webpack = function () {
    return data;
  };

  return data;
}

function _cli() {
  const data = require("../cli");

  _cli = function () {
    return data;
  };

  return data;
}

function _start() {
  const data = require("./start.cmd");

  _start = function () {
    return data;
  };

  return data;
}

function _environments() {
  const data = require("../environments");

  _environments = function () {
    return data;
  };

  return data;
}

function _workspace() {
  const data = require("../workspace");

  _workspace = function () {
    return data;
  };

  return data;
}

function _graphql() {
  const data = require("../graphql");

  _graphql = function () {
    return data;
  };

  return data;
}

function _webpack2() {
  const data = _interopRequireDefault(require("./webpack/webpack.config"));

  _webpack2 = function () {
    return data;
  };

  return data;
}

class UIExtension {
  constructor(envs, graphql, workspace) {
    this.envs = envs;
    this.graphql = graphql;
    this.workspace = workspace;
  }

  createDevServer() {}

  selectPort() {
    return 3000;
  }

  createRuntime(components) {
    var _this = this;

    return (0, _bluebird().coroutine)(function* () {
      const server = _this.graphql.listen();

      components;
      const config = (0, _webpack2().default)(_this.workspace.path, [require.resolve('./ui.runtime')]);
      const compiler = (0, _webpack().default)(config);
      const devServer = new (_webpackDevServer().default)(compiler);
      devServer.listen(_this.selectPort());
      return server;
    })();
  }

  static provider([cli, envs, workspace, graphql]) {
    return (0, _bluebird().coroutine)(function* () {
      const ui = new UIExtension(envs, graphql, workspace);
      cli.register(new (_start().StartCmd)(ui, workspace));
      return ui;
    })();
  }

}

exports.UIExtension = UIExtension;
(0, _defineProperty2().default)(UIExtension, "dependencies", [_cli().CLIExtension, _environments().Environments, _workspace().WorkspaceExt, _graphql().GraphQLExtension]);
(0, _defineProperty2().default)(UIExtension, "runtimes", {
  ui: '',
  cli: ''
});