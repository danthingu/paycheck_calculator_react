import { Harmony } from '@teambit/harmony';
import { ScopeExtension } from '../scope';
import Workspace from './workspace';
import { ComponentFactory } from '../component';
import { IsolatorExtension } from '../isolator';
import { Logger } from '../logger';
import { DependencyResolverExtension } from '../dependency-resolver';
import { Variants } from '../variants';
import { WorkspaceExtConfig } from './types';
import { GraphQLExtension } from '../graphql';
import { CLIExtension } from '../cli';
export declare type WorkspaceDeps = [CLIExtension, ScopeExtension, ComponentFactory, IsolatorExtension, DependencyResolverExtension, Variants, Logger, GraphQLExtension];
export declare type WorkspaceCoreConfig = {
    componentsDefaultDirectory: string;
    defaultScope: string;
    defaultOwner: string;
};
export default function provideWorkspace([cli, scope, component, isolator, dependencyResolver, variants, logger, graphql]: WorkspaceDeps, config: WorkspaceExtConfig, _slots: any, harmony: Harmony): Promise<Workspace | undefined>;
