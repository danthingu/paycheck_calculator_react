import { Logger } from '../logger';
import { Capsule } from '../isolator';
import { installOpts } from './types';
export declare function onCapsuleInstalled(cb: any): void;
export declare function beforeInstallingCapsules(cb: any): void;
export default class PackageManager {
    readonly packageManagerName: string;
    readonly logger: Logger;
    private emitter;
    constructor(packageManagerName: string, logger: Logger);
    get name(): string;
    checkIfFileExistsInCapsule(capsule: Capsule, file: string): Promise<boolean>;
    removeLockFilesInCapsule(capsule: Capsule): Promise<void>;
    capsulesInstall(capsules: Capsule[], opts?: installOpts): Promise<null>;
    runInstallInFolder(folder: string, opts?: installOpts): Promise<null>;
}
