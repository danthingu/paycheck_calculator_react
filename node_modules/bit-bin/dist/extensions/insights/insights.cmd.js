"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _bluebird() {
  const data = require("bluebird");

  _bluebird = function () {
    return data;
  };

  return data;
}

function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

  _defineProperty2 = function () {
    return data;
  };

  return data;
}

function _react() {
  const data = _interopRequireDefault(require("react"));

  _react = function () {
    return data;
  };

  return data;
}

function _ink() {
  const data = require("ink");

  _ink = function () {
    return data;
  };

  return data;
}

// eslint-disable-next-line @typescript-eslint/no-unused-vars
class InsightsCmd {
  constructor(insightManager) {
    (0, _defineProperty2().default)(this, "name", 'insights [...names]');
    (0, _defineProperty2().default)(this, "description", 'Insights on component graph');
    (0, _defineProperty2().default)(this, "group", 'development');
    (0, _defineProperty2().default)(this, "private", true);
    (0, _defineProperty2().default)(this, "options", [['l', 'list', 'list all insights']]);
    (0, _defineProperty2().default)(this, "insightManager", void 0);
    this.insightManager = insightManager;
  }

  render([names], {
    list
  }) {
    var _this = this;

    return (0, _bluebird().coroutine)(function* () {
      if (list) {
        const results = _this.insightManager.listInsights();

        const listItems = results.map(insight => insight += '\n');
        return /*#__PURE__*/_react().default.createElement(_ink().Color, {
          blueBright: true
        }, listItems);
      }

      if (names) {
        let results = [];
        const namesArr = typeof names === 'string' ? [names] : names;
        results = yield _this.insightManager.run(namesArr);
        return /*#__PURE__*/_react().default.createElement(_ink().Color, {
          blueBright: true
        }, results);
      }

      const results = yield _this.insightManager.runAll();
      return template(results);
    })();
  }

}

exports.default = InsightsCmd;

function template(results) {
  return /*#__PURE__*/_react().default.createElement("div", {
    key: "help"
  }, results.map(function (result) {
    return /*#__PURE__*/_react().default.createElement("div", {
      key: result.metaData.name
    }, /*#__PURE__*/_react().default.createElement("div", null, /*#__PURE__*/_react().default.createElement(_ink().Text, null, '\n'), /*#__PURE__*/_react().default.createElement(_ink().Text, {
      bold: true,
      underline: true
    }, result.metaData.name)), /*#__PURE__*/_react().default.createElement("div", null, result.renderedData));
  }));
}