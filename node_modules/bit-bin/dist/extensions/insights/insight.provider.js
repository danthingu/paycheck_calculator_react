"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.provide = provide;

function _bluebird() {
  const data = require("bluebird");

  _bluebird = function () {
    return data;
  };

  return data;
}

function _coreInsightsGetter() {
  const data = _interopRequireDefault(require("./core-insights-getter"));

  _coreInsightsGetter = function () {
    return data;
  };

  return data;
}

function _insightManager() {
  const data = require("./insight-manager");

  _insightManager = function () {
    return data;
  };

  return data;
}

function _insights() {
  const data = _interopRequireDefault(require("./insights.cmd"));

  _insights = function () {
    return data;
  };

  return data;
}

function provide(_x) {
  return _provide.apply(this, arguments);
}

function _provide() {
  _provide = (0, _bluebird().coroutine)(function* ([graphBuilder, cli]) {
    // get all insights from registry
    const initialInsights = (0, _coreInsightsGetter().default)(graphBuilder); // register all insights in cli
    // TODO - get user-defined insights as well, and use them when instantiating InsightManager and InsightsCmd

    const insightManager = new (_insightManager().InsightManager)(initialInsights);
    const insightsCmd = new (_insights().default)(insightManager);
    cli.register(insightsCmd);
  });
  return _provide.apply(this, arguments);
}