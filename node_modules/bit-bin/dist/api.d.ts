import { AddProps } from './consumer/component-ops/add-components/add-components';
import { manifestsMap as coreExtensions } from './extensions/bit';
export * from '@teambit/harmony';
export { default as harmony } from '@teambit/harmony';
export { coreExtensions };
declare type LoadCoreExtensionsOptions = {
    cwd?: string;
    timeout?: number;
};
export declare function show(scopePath: string, id: string, opts?: Record<string, any>): any;
export declare function list(scopePath: string, namespacesUsingWildcards?: string, opts?: {
    loadScopeFromCache?: boolean;
}): Promise<string[]>;
export declare function buildOne(id: string, noCache?: boolean, verbose?: boolean, workspaceDir?: string): Promise<string[] | undefined>;
export declare function buildAll(id: string, noCache?: boolean, verbose?: boolean): Promise<Record<string, any>>;
export declare function addMany(components: AddProps[], alternateCwd?: string): Promise<import("./consumer/component-ops/add-components/add-components").AddActionResults[]>;
export declare function loadCoreExtensions(options?: LoadCoreExtensionsOptions): Promise<import("@teambit/harmony").Harmony>;
export declare function getLoadedCoreExtension(extensionId: string, options?: LoadCoreExtensionsOptions): Promise<unknown>;
export declare function getDeclarationCoreExtension(extensionId: string): import("@teambit/harmony").ExtensionManifest | typeof import("./extensions/environments").Environments | typeof import("./extensions/dependency-resolver").DependencyResolverExtension | {
    name: string;
    dependencies: never[];
    config: {};
    provider: typeof import("./extensions/logger/logger.provider").provideLogger;
} | typeof import("./extensions/cli").CLIExtension | {
    name: string;
    dependencies: {
        name: string;
        dependencies: never[];
        config: {};
        provider: typeof import("./extensions/logger/logger.provider").provideLogger;
    }[];
    config: {};
    provider: typeof import("./extensions/reporter/reporter.provider").provideReporter;
} | typeof import("./extensions/isolator").IsolatorExtension | typeof import("./extensions/component").ComponentFactoryExt | typeof import("./extensions/scope").ScopeExtension | {
    name: string;
    dependencies: never[];
    config: {};
    provider: typeof import("./extensions/config/config.provider").default;
} | typeof import("./extensions/graphql").GraphQLExtension | typeof import("./extensions/builder").BuilderExtension | typeof import("./extensions/pkg").PkgExtension | typeof import("./extensions/tester").TesterExtension | typeof import("./extensions/react").React | typeof import("./extensions/ui").UIExtension | {
    name: string;
    dependencies: (import("@teambit/harmony").ExtensionManifest | typeof import("./extensions/cli").CLIExtension)[];
    provider: typeof import("./extensions/watch/watch.provider").provideWatch;
};
