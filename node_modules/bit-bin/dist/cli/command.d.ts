/// <reference types="react" />
import { CommandOptions } from './legacy-command';
export interface Command {
    name: string;
    alias?: string;
    shortDescription?: string;
    description?: string;
    group?: string;
    private?: boolean;
    internal?: boolean;
    loader?: boolean;
    options: CommandOptions;
    commands?: Command[];
    remoteOp?: boolean;
    _packageManagerArgs?: string[];
    render?(args: CLIArgs, flags: Flags): Promise<React.ReactElement>;
    report?(args: CLIArgs, flags: Flags): Promise<string | Report>;
    json?(args: CLIArgs, flags: Flags): Promise<GenericObject>;
}
export declare type Flags = {
    [flagName: string]: string | boolean | undefined;
};
export declare type CLIArgs = Array<string[] | string>;
export declare type GenericObject = {
    [k: string]: any;
};
export declare type Report = {
    data: string;
    code: number;
};
